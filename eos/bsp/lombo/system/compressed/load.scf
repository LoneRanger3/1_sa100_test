
OUTPUT_ARCH(arm)
ENTRY(_start)
SECTIONS
{
	/DISCARD/ : {
	  *(.ARM.exidx*)
	  *(.ARM.extab*)
	  /*
	   * Discard any r/w data - this produces a link error if we have any,
	   * which is required for PIC decompression.  Local data generates
	   * GOTOFF relocations, which prevents it being relocated independently
	   * of the text/got segments.
	   */
	  *(.data)
	}

	/* . = TEXT_START; */
	. = 0;			/* from $(obj)/../vmlinux.lds */
	_text = .;

	.text : {
	  _start = .;
	  *(.start)
	  *(.text)
	  *(.text.*)
	  *(.fixup)
	  *(.gnu.warning)
	  *(.glue_7t)
	  *(.glue_7)
	}
	.rodata : {
	  *(.rodata)
	  *(.rodata.*)
	}
	.piggydata : {
	  *(.piggydata)
	}

	. = ALIGN(4);
	_etext = .;

	.got.plt		: { *(.got.plt) }
	_got_start = .;
	.got			: { *(.got) }
	_got_end = .;

	/* ensure the zImage file size is always a multiple of 64 bits */
	/* (without a dummy byte, ld just ignores the empty section) */
	.pad			: { BYTE(0); . = ALIGN(8); }
	_edata = .;

	/* . = BSS_START; */
	. = ALIGN(8);		/* from $(obj)/../vmlinux.lds */
	__bss_start = .;
	.bss			: { *(.bss) }
	_end = .;

	. = ALIGN(8);		/* the stack must be 64-bit aligned */
	.stack			: { *(.stack) }

	.stab 0			: { *(.stab) }
	.stabstr 0		: { *(.stabstr) }
	.stab.excl 0		: { *(.stab.excl) }
	.stab.exclstr 0	: { *(.stab.exclstr) }
	.stab.index 0		: { *(.stab.index) }
	.stab.indexstr 0	: { *(.stab.indexstr) }
	.comment 0		: { *(.comment) }
}

